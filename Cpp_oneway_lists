#include <iostream>
#include <cstdlib>
#include <assert.h>

using namespace std;

class Kulka {
public:
    int v;
    Kulka *next;

    Kulka ()
    {
     next = NULL;
     v = rand() %101;
    }
    void show ()
    {
        cout << v << " ";

        if (next)
        {
            next->show();
        }

    }
    void add (Kulka *temp)
    {
        if (next)
        {
            next -> add(temp);
        }
        else
        {
            next = temp;
        }
    }
    void sorted(Kulka *nowa)
    {
        if (next)
        {
            if (next->v < nowa->v)
            {
                next -> sorted(nowa);
            }
            else
            {
                nowa->next = next;
                next = nowa;
            }
        }
        else
        {
            next = nowa;
        }
    }
    void number(Kulka *temp)
    {
        int num=0;
        cout << "\nWyswietlmy zawartosc ktorejs z kulek!\nPodaj numer kulki: ";
        cin >> num;

        if (next)
        {
            for (int i=0 ; i<num-1 ;i++)
            {
                temp = temp->next;
            }
            cout << "V: " << temp->v << endl;
        }
        else
        {
            cout << "\n Ups.. chyba nie mam co wyswietlic :)";
        }
    }
    void destroy(Kulka *temp)
    {
        Kulka *next1 = temp;
        int num=0;
        cout << "\nPodaj numer kulki do usuniecia: ";
        cin >> num;
            for (int i=0; i<num-2; i++) /// Bedziemy w elemencie o 1 mniej niz ten do usuniecia
            {
                temp=temp->next;

                if (temp->next == 0)
                {
                                cout << "\nNie moge usunac czegos, co nie istnieje ;)"; assert(1); break;
                }
            }
            if (temp->next)
            {
            next1 = temp->next;
            temp->next = temp->next->next; /// Ominiecie tej kulki na liscie
            next1=NULL;
            delete next1;
            }
    }
    void summ(Kulka *temp, int &b)
    {
      for (int i=0; i<10 ; i++)
      {
          b = b + temp->v;
          temp = temp->next;
      }
    }
};


int main()
{
    Kulka *root = new Kulka();
    Kulka *temp = root;


    cout << "Dodajmy kulki! " << endl;
    int a =0;
    cout << "Wybierz sposob dodawania kulek: \n ---------------- \n 1. Full Manual \n 2. Show() ";
    cout << "\n 3. Show() i Add() \n 4. Sorted() z Showem() (bez 1 elementu)\n ";
    cout << "Twoj wybor to: ";
    cin >> a;
    cout << endl;
switch (a)
{
    case 1:
    {
       for (int i=0; i<10; i++)
        {
            temp-> next = new Kulka();
            temp = temp -> next;
        }

        temp = root;

        while (temp)
        {
            cout << temp->v << " ";#include <iostream>
#include <cstdlib>
#include <assert.h>

using namespace std;

class Kulka {
   public:
    int v;
    Kulka *left;
    Kulka *right;
 ~Kulka()
 {
     if (left) delete left;
     cout << " D ";
     if (right) delete right;
 }
    void add_ball(Kulka *temp)
    {
        if (v > temp->v) /// W lewo
        {
            if (left)
            {
                left->add_ball(temp);
            }
            else
            {
                left = temp;
            }
        }
        else /// w prawo
        {
            if (right)
            {
                right -> add_ball(temp);
            }
            else
            {
                right = temp;
            }
        }

    }
    void show()
    {
        if (left) {left->show();}
        cout << v << " ";
        if (right) {right->show();}
    }
};
class Parzysta : public Kulka {
        public:
    Parzysta()
    {
        left = NULL;
        right = NULL;
    }
};
class Nieparzysta : public Kulka {
        public:
    Nieparzysta ()
    {
        left = NULL;
        right = NULL;
    }
};

int main()

{   Kulka *root = NULL;
    Kulka *temp = NULL;

    int losowana = 0;
    losowana = rand ()%101;

    if (losowana%2)
    {
        root = new Nieparzysta();
        root->v = losowana;
    }
    else
    {
        root = new Parzysta();
        root->v = losowana;
    }

    for (int i=0; i < 9 ; i++)
    {
        losowana = rand () %101;

        if (losowana%2) /// nieparzysta
        {

            temp = new Nieparzysta();
            temp->v = losowana;
            root -> add_ball(temp);
        }
        else
        {

            temp = new Parzysta();
            temp->v = losowana;
            root -> add_ball(temp);
        }
    }

    cout << "\nWyswietlmy liste: ";
    root -> show();
    cout << "\n";
    delete root;

    return 0;
}

            temp = temp->next;
        }
        break;
    }
    case 2:
    {
       for (int i=0; i<10; i++)
        {
            temp-> next = new Kulka();
            temp = temp -> next;

        }
            root -> show ();
        break;
    }
    case 3:
    {
        for ( int i=0 ; i< 10 ; i++)
        {
            root -> add(new Kulka());
        }

            root -> show();
         break;
    }
    case 4:
    {
        root->v = 17;
    for (int i=0 ; i<10 ; i++)
    {
        root -> sorted(new Kulka());
    }
        root -> show();
        break;
    }
}

int b=0;
cout << "\n Brawo! Utworzylismy juz liste, teraz mozemy na tej liscie dokonac pewnych dzialan:\n 1. Zczytanie wartosci kulki \n 2. Usuniecie Kulki \n 3. Zsumowanie wartosci kulek \n";
cout << endl << "Twoj wybor to: ";
cin >> b;

switch(b)
{
    case 1:
    {
           temp = root;
    cout << endl;
    root -> number(temp);
    break;
    }
    case 2:
    {
    cout << "Czy chcesz usunac jakas kulke?\n1. Tak \n2. Nie\n";
    cin >> a;
    if (a==1)
    {
        root->destroy(temp);
        root->show();
    }
    else
    {
        root -> show();
    }
    break;
    }
    case 3:
    {
     temp = root;
     int c=0;
     root -> summ(temp, c);
     cout << "Suma wynosi: " << c;
     break;
    }
}
    return 0;
}
